PROBLEM:  Input: arr[] = {1, 2, 3, 3}, X = 6 
          Output: 3 
          All the possible subsets are {1, 2, 3}, {1, 2, 3} and {3, 3}
          
      
SOLUTION:


#include<bits/stdc++.h>
using namespace std;

int CntSubsetOfSum(int arr[], int n, int X){
    int t[n+1][X+1];
    
    for(int i=0;i<=n;i++){
        for(int j=0;j<=X;j++){
            if(i==0) t[i][j]=0;
            if(j==0) t[i][j]=1;
        }
    }
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<=X;j++){
            if(arr[i-1]<=j){
                t[i][j] = t[i-1][j] + t[i-1][j-arr[i-1]];
            }
            else{
                t[i][j] = t[i-1][j];
            }
        }
    }
    
    return t[n][X];
}

int main()
{
    int arr[4] = {1, 1, 1, 1}, X = 1, n=4;
    
    cout<<CntSubsetOfSum(arr, n, X);
}




