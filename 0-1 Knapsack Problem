PROBLEM: You are given weights and values of N items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. 
         Note that we have only one quantity of each item.
        
Example 1:

            Input:
            N = 3
            W = 4
            values[] = {1,2,3}
            weight[] = {4,5,1}
            Output: 3

Example 2:

            Input:
            N = 3
            W = 3
            values[] = {1,2,3}
            weight[] = {4,5,6}
            Output: 0
            
            
 
SOLUTION:


int knapSack(int W, int wt[], int val[], int n) 
    { 
        int t[n+1][W+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=W;j++){
                t[i][j]=-1;
            }
        }
        
        for(int i=0; i<=n;i++){
            for(int j=0;j<=W;j++){
                if(i==0) t[i][j]=0;
                if(j==0) t[i][j]=0;
            }
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=W;j++){
                if(wt[i-1]<=j){
                    t[i][j] = max(val[i-1]+t[i-1][j-wt[i-1]], t[i-1][j]);
                }
                else{
                    t[i][j] = t[i-1][j];
                }
            }
        }
       
        return t[n][W];
       
    }
    
    
    
    
    
    
